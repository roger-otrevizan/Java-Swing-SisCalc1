package siscalci;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import static siscalci.TelaInicial.translate;

public class Funcao2 extends javax.swing.JFrame {

    //Declaração dos Atributos da Função de 2º Grau
    String valor, raizes;
    private int contadorDireita = 1, contadorEsquerda = -9;
    private double a, b, c, // Coeficientes
            delta, // Delta
            x1, x2, // Raízes 
            xi1, xi2;    // Raízes Imaginárias
    private double yv, xv;      // Y e X do vértice
    private double xDireita = 0, yDireita = 0, xEsquerda = 0, yEsquerda = 0, incremento = 1;

    public Funcao2() {
        this.a = 0;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLimpar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbA2 = new javax.swing.JLabel();
        txtA2 = new javax.swing.JTextField();
        lbB2 = new javax.swing.JLabel();
        txtB2 = new javax.swing.JTextField();
        lbC2 = new javax.swing.JLabel();
        txtC2 = new javax.swing.JTextField();
        btnCalcular2 = new javax.swing.JButton();
        lblRaizes2 = new javax.swing.JLabel();
        lblX1 = new javax.swing.JLabel();
        lblX1Result = new javax.swing.JLabel();
        lblX2 = new javax.swing.JLabel();
        lblX2Result = new javax.swing.JLabel();
        lblResultado1 = new javax.swing.JLabel();
        lblYV = new javax.swing.JLabel();
        lblYv = new javax.swing.JLabel();
        lblXV = new javax.swing.JLabel();
        lblXv = new javax.swing.JLabel();
        btnVoltar1 = new javax.swing.JButton();
        btnLimpar1 = new javax.swing.JButton();
        btGrafico = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblFuncao1 = new javax.swing.JLabel();

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Função de 2º Grau");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        lbA2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lbA2.setForeground(new java.awt.Color(0, 0, 51));
        lbA2.setText("A =");

        txtA2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtA2.setForeground(new java.awt.Color(0, 0, 51));
        txtA2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51)));
        txtA2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtA2KeyPressed(evt);
            }
        });

        lbB2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lbB2.setForeground(new java.awt.Color(0, 0, 51));
        lbB2.setText("B =");

        txtB2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtB2.setForeground(new java.awt.Color(0, 0, 51));
        txtB2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51)));
        txtB2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtB2KeyPressed(evt);
            }
        });

        lbC2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lbC2.setForeground(new java.awt.Color(0, 0, 51));
        lbC2.setText("C =");

        txtC2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtC2.setForeground(new java.awt.Color(0, 0, 51));
        txtC2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51)));
        txtC2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtC2KeyPressed(evt);
            }
        });

        btnCalcular2.setBackground(new java.awt.Color(255, 255, 255));
        btnCalcular2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        btnCalcular2.setForeground(new java.awt.Color(0, 0, 51));
        btnCalcular2.setText("Calcular");
        btnCalcular2.setBorder(null);
        btnCalcular2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCalcular2.setOpaque(false);
        btnCalcular2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcular2ActionPerformed(evt);
            }
        });
        btnCalcular2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCalcular2KeyPressed(evt);
            }
        });

        lblRaizes2.setBackground(new java.awt.Color(0, 0, 51));
        lblRaizes2.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblRaizes2.setForeground(new java.awt.Color(255, 255, 255));
        lblRaizes2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRaizes2.setText("Raízes");
        lblRaizes2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        lblRaizes2.setOpaque(true);

        lblX1.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblX1.setForeground(new java.awt.Color(0, 0, 51));
        lblX1.setText("X' = ");

        lblX1Result.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblX1Result.setForeground(new java.awt.Color(0, 0, 51));
        lblX1Result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblX1Result.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51)));

        lblX2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblX2.setForeground(new java.awt.Color(0, 0, 51));
        lblX2.setText("X'' = ");

        lblX2Result.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblX2Result.setForeground(new java.awt.Color(0, 0, 51));
        lblX2Result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblX2Result.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51)));

        lblResultado1.setBackground(new java.awt.Color(0, 0, 51));
        lblResultado1.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblResultado1.setForeground(new java.awt.Color(255, 255, 255));
        lblResultado1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblResultado1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações Adicionais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        lblResultado1.setOpaque(true);

        lblYV.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblYV.setForeground(new java.awt.Color(0, 0, 51));
        lblYV.setText("Yv =");

        lblYv.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblYv.setForeground(new java.awt.Color(0, 0, 51));
        lblYv.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblYv.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51)));

        lblXV.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblXV.setForeground(new java.awt.Color(0, 0, 51));
        lblXV.setText("Xv =");

        lblXv.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        lblXv.setForeground(new java.awt.Color(0, 0, 51));
        lblXv.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblXv.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 51)));

        btnVoltar1.setBackground(new java.awt.Color(255, 255, 255));
        btnVoltar1.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        btnVoltar1.setForeground(new java.awt.Color(0, 0, 51));
        btnVoltar1.setText("Voltar");
        btnVoltar1.setBorder(null);
        btnVoltar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar1.setOpaque(false);
        btnVoltar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltar1ActionPerformed(evt);
            }
        });
        btnVoltar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnVoltar1KeyPressed(evt);
            }
        });

        btnLimpar1.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpar1.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        btnLimpar1.setForeground(new java.awt.Color(0, 0, 51));
        btnLimpar1.setText("Limpar");
        btnLimpar1.setBorder(null);
        btnLimpar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpar1.setOpaque(false);
        btnLimpar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpar1ActionPerformed(evt);
            }
        });
        btnLimpar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLimpar1KeyPressed(evt);
            }
        });

        btGrafico.setBackground(new java.awt.Color(255, 255, 255));
        btGrafico.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        btGrafico.setForeground(new java.awt.Color(0, 0, 51));
        btGrafico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/grafico_icone_30x30.png"))); // NOI18N
        btGrafico.setText("Gerar Gráfico");
        btGrafico.setBorder(null);
        btGrafico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btGrafico.setOpaque(false);
        btGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGraficoActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblTitulo.setBackground(new java.awt.Color(0, 0, 51));
        lblTitulo.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Função 2º Grau");
        lblTitulo.setOpaque(true);

        lblFuncao1.setBackground(new java.awt.Color(0, 0, 51));
        lblFuncao1.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        lblFuncao1.setForeground(new java.awt.Color(255, 255, 255));
        lblFuncao1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFuncao1.setText(" f(x) = ax² + bx + c");
        lblFuncao1.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFuncao1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(lblFuncao1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 54, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblRaizes2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblResultado1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVoltar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btGrafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lbA2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtA2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbB2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtB2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbC2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtC2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCalcular2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblX1)
                            .addComponent(lblX2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblX1Result, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(lblX2Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblXV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblYV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblYv, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblXv, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbB2)
                    .addComponent(lbC2)
                    .addComponent(txtC2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbA2)
                    .addComponent(btnCalcular2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(lblRaizes2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblX1)
                        .addComponent(lblYv, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblX1Result, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblYV))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblXV)
                    .addComponent(lblX2)
                    .addComponent(lblX2Result, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblXv, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblResultado1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnVoltar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btGrafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void validaTxt() {
        ((AbstractDocument) txtA2.getDocument()).setDocumentFilter(new RandomValidator(10, true, false, false, false, '.', '-'));
        ((AbstractDocument) txtB2.getDocument()).setDocumentFilter(new RandomValidator(10, true, false, false, false, '.', '-'));
        ((AbstractDocument) txtC2.getDocument()).setDocumentFilter(new RandomValidator(10, true, false, false, false, '.', '-'));

        /* Na ordem: 

         Número máximo de caracteres 
         Permite números 
         Valida ponto flutuante (1.50, por exemplo) 
         Permite letras 
         Permite todos os caracteres especias 
         Caracteres especiais permitidos (pode passar quantos quiser como parâmetro, note que no exemplo permite '.' e '-'
         */
    }

    public void validarCampoVazio() {
        if (txtA2.getText().trim().isEmpty() && !txtB2.getText().trim().isEmpty() && !txtC2.getText().trim().isEmpty()) {
            if (translate == true) {
                JOptionPane.showMessageDialog(null, "Assuming value of 1 to A!", "Message", JOptionPane.INFORMATION_MESSAGE);
                txtA2.setText(String.valueOf(1d));
            } else {
                JOptionPane.showMessageDialog(null, "Assumindo o valor de 1 para A!");
                txtA2.setText(String.valueOf(1d));
            }
        } else if (!txtA2.getText().trim().isEmpty() && txtB2.getText().trim().isEmpty() && !txtC2.getText().trim().isEmpty()) {
            if (translate == true) {
                JOptionPane.showMessageDialog(null, "Assuming value of 1 to B!", "Message", JOptionPane.INFORMATION_MESSAGE);
                txtB2.setText(String.valueOf(1d));
            } else {
                JOptionPane.showMessageDialog(null, "Assumindo o valor de 1 para B!");
                txtB2.setText(String.valueOf(1d));
            }
        } else if (!txtA2.getText().trim().isEmpty() && !txtB2.getText().trim().isEmpty() && txtC2.getText().trim().isEmpty()) {
            if (translate == true) {
                JOptionPane.showMessageDialog(null, "Assuming value of 1 to C!", "Message", JOptionPane.INFORMATION_MESSAGE);
                txtC2.setText(String.valueOf(1d));
            } else {
                JOptionPane.showMessageDialog(null, "Assumindo o valor de 1 para C!");
                txtC2.setText(String.valueOf(1d));
            }
        } else if ((txtA2.getText().trim().isEmpty() || txtB2.getText().trim().isEmpty()) && !txtC2.getText().trim().isEmpty()) {
            if (translate == true) {
                JOptionPane.showMessageDialog(null, "Assuming value of 1 to A and B!", "Message", JOptionPane.INFORMATION_MESSAGE);
                txtA2.setText(String.valueOf(1d));
                txtB2.setText(String.valueOf(1d));
            } else {
                JOptionPane.showMessageDialog(null, "Assumindo o valor de 1 para A e B!");
                txtA2.setText(String.valueOf(1d));
                txtB2.setText(String.valueOf(1d));
            }
        } else if ((txtA2.getText().trim().isEmpty() || txtC2.getText().trim().isEmpty()) && !txtB2.getText().trim().isEmpty()) {
            if (translate == true) {
                JOptionPane.showMessageDialog(null, "Assuming value of 1 to A and C!", "Message", JOptionPane.INFORMATION_MESSAGE);
                txtA2.setText(String.valueOf(1d));
                txtC2.setText(String.valueOf(1d));
            } else {
                JOptionPane.showMessageDialog(null, "Assumindo o valor de 1 para A e C!");
                txtA2.setText(String.valueOf(1d));
                txtC2.setText(String.valueOf(1d));
            }
        } else if ((txtB2.getText().trim().isEmpty() || txtC2.getText().trim().isEmpty()) && !txtA2.getText().trim().isEmpty()) {
            if (translate == true) {
                JOptionPane.showMessageDialog(null, "Assuming value of 1 to B and C!", "Message", JOptionPane.INFORMATION_MESSAGE);
                txtB2.setText(String.valueOf(1d));
                txtC2.setText(String.valueOf(1d));
            } else {
                JOptionPane.showMessageDialog(null, "Assumindo o valor de 1 para B e C!");
                txtB2.setText(String.valueOf(1d));
                txtC2.setText(String.valueOf(1d));
            }
        } else if (txtA2.getText().trim().isEmpty() || txtB2.getText().trim().isEmpty() || txtC2.getText().trim().isEmpty()) {
            if (translate == true) {
                JOptionPane.showMessageDialog(null, "Assuming value of 1 to all the fields!", "Message", JOptionPane.INFORMATION_MESSAGE);
                txtA2.setText(String.valueOf(1d));
                txtB2.setText(String.valueOf(1d));
                txtC2.setText(String.valueOf(1d));
            } else {
                JOptionPane.showMessageDialog(null, "Assumindo o valor de 1 para todos os campos!");
                txtA2.setText(String.valueOf(1d));
                txtB2.setText(String.valueOf(1d));
                txtC2.setText(String.valueOf(1d));
            }
        }
    }

    //Método para exibir nos jLabels os vértices de X e Y
    public void mostraVertices(double x, double y) {
        lblXv.setText(String.valueOf(x));
        lblYv.setText(String.valueOf(y));
    }

    //Cálculo da funçãod e 2º grau
    public void calculaFuncao() {
        if (translate == true) {
            lblRaizes2.setVisible(true);
            lblRaizes2.setText("Roots");
            lblX1.setVisible(true);
            lblX1Result.setVisible(true);
            lblX2.setVisible(true);
            lblX2Result.setVisible(true);
            lblYV.setVisible(true);
            lblYv.setVisible(true);
            lblXV.setVisible(true);
            lblXv.setVisible(true);
            lblResultado1.setVisible(true);
            btnLimpar1.setVisible(true);
            pack();
            setLocationRelativeTo(null);
        } else {
            lblRaizes2.setVisible(true);
            lblX1.setVisible(true);
            lblX1Result.setVisible(true);
            lblX2.setVisible(true);
            lblX2Result.setVisible(true);
            lblYV.setVisible(true);
            lblYv.setVisible(true);
            lblXV.setVisible(true);
            lblXv.setVisible(true);
            lblResultado1.setVisible(true);
            btnLimpar1.setVisible(true);
            pack();
            setLocationRelativeTo(null);
        }

        validarCampoVazio();
        //PASSO 1: recebe os coeficientes
        valor = txtA2.getText().trim();
        a = Double.parseDouble(valor.trim());

        valor = txtB2.getText().trim();
        b = Double.parseDouble(valor.trim());

        valor = txtC2.getText().trim();
        c = Double.parseDouble(valor.trim());

        //PASSO 2: Checar se 'a' não é 0
        while (a == 0) {
            if (a == 0) {
                if (translate == true) {
                    valor = JOptionPane.showInputDialog(null, "'a' can't be 0. Type another value.", "Data Entry", JOptionPane.ERROR_MESSAGE);
                    a = Double.parseDouble(valor.trim());
                    txtA2.setText(String.valueOf(a));
                } else {
                    valor = JOptionPane.showInputDialog("'a' não pode ser 0. Insira outro valor.");
                    a = Double.parseDouble(valor.trim());
                    txtA2.setText(String.valueOf(a));
                }
            }
        }

        //Calculando o delta, vértices de X e Y.
        delta = (b * b - 4 * a * c);
        xv = -b / 2 * a;
        yv = -delta / 4 * a;

        /* PASSO 3: checa se o delta é 0 ou se é positivo. Se for 0,mostra uma única raíz real,
         * se for positivo, mostra as raízes reais
         */
        if (delta == 0) {
            x1 = (-b + (double) Math.sqrt(delta)) / (2 * a);
            x2 = (-b - (double) Math.sqrt(delta)) / (2 * a);

            if (translate == true) {
                lblRaizes2.setText("Results");
                lblX1Result.setText(String.valueOf(x1));
                lblX2Result.setText("");
                lblXv.setText(String.valueOf(xv));
                lblYv.setText("0");
                lblResultado1.setText(String.format("<html>&nbsp;&nbsp;If delta is zero, "
                        + " there is only one real root.<html>"));
            } else {
                lblRaizes2.setText("Resultados");
                lblX1Result.setText(String.valueOf(x1));
                lblX2Result.setText("");
                lblXv.setText(String.valueOf(xv));
                lblYv.setText("0");
                lblResultado1.setText(String.format("<html>&nbsp;&nbsp;Sendo o delta igual a zero, "
                        + " note a existência de uma única raíz real.<html>"));
            }
        } else if (delta >= 0) {
            x1 = (-b + (double) Math.sqrt(delta)) / (2 * a);
            x2 = (-b - (double) Math.sqrt(delta)) / (2 * a);

            lblX1Result.setText(String.valueOf(x1));
            lblX2Result.setText(String.valueOf(x2));
            mostraVertices(xv, yv);
            lblResultado1.setVisible(false);
            pack();
            setLocationRelativeTo(null);

            //PASSO 4: caso seja negativo, devemos formatar para a exibição para números complexos    
        } else {
            x1 = (-b / (2 * a));
            xi1 = ((double) Math.sqrt(-delta) / (2 * a));

            x2 = (-b / (2 * a));
            xi2 = ((double) Math.sqrt(-delta) / (2 * a));

            lblX1Result.setText(String.format("%.2f + %.2fi\n", x1, xi1));
            lblX2Result.setText(String.format("%.2f - %.2fi\n", x2, xi2));
            mostraVertices(xv, yv);

            if (translate == true) {
                lblResultado1.setText("<html>&nbsp;&nbsp;For the calculation of this equation, when delta is negative, "
                        + "it uses the theory of complex numbers. <html>");
            } else {
                lblResultado1.setText("<html>&nbsp;&nbsp;Para o cálculo desta equação, "
                        + "quando delta é negativo, utiliza-se a teoria dos números complexos (imaginários). <html>");
            }
        }

        /*
         * Cálculos desenvolvidos com ajuda do site:
         * http://www.javaprogressivo.net/2012/09/aplicativo-grafico-mostra-as-raizes-de.html
         * Foram modificados para adequação a este programa
         */
    }

    private void btnCalcular2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcular2ActionPerformed
        calculaFuncao();
        validaTxt();
        pack();
        setLocationRelativeTo(null);
    }//GEN-LAST:event_btnCalcular2ActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        //BOTÃO NA EXISTE
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        //BOTÃO NA EXISTE
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnLimpar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpar1ActionPerformed
        txtA2.setText("");
        txtB2.setText("");
        txtC2.setText("");
        lblX1Result.setText("");
        lblX2Result.setText("");
        lblYv.setText("");
        lblXv.setText("");
        lblResultado1.setText("");
        lblRaizes2.setVisible(false);
        lblX1.setVisible(false);
        lblX1Result.setVisible(false);
        lblX2.setVisible(false);
        lblX2Result.setVisible(false);
        lblYV.setVisible(false);
        lblYv.setVisible(false);
        lblXV.setVisible(false);
        lblXv.setVisible(false);
        lblResultado1.setVisible(false);
        btnLimpar1.setVisible(false);
        pack();
        setLocationRelativeTo(null);

    }//GEN-LAST:event_btnLimpar1ActionPerformed

    private void btnVoltar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltar1ActionPerformed
        new OpcaoFuncao().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltar1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        if (translate == true) {
            setTitle("2nd Degree Function");
            lblTitulo.setText("2nd Degree Function");
            btnCalcular2.setText("Calculate");
            lblResultado1.setBorder(BorderFactory.createTitledBorder(null, "Additional Informations", WIDTH, WIDTH, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255)));
            btnVoltar1.setText("Return");
            btnLimpar1.setText("Clean");
            btGrafico.setText("Generate Chart");
            pack();
        }

        lblRaizes2.setVisible(false);
        lblX1.setVisible(false);
        lblX1Result.setVisible(false);
        lblX2.setVisible(false);
        lblX2Result.setVisible(false);
        lblYV.setVisible(false);
        lblYv.setVisible(false);
        lblXV.setVisible(false);
        lblXv.setVisible(false);
        lblResultado1.setVisible(false);
        btnLimpar1.setVisible(false);
        validaTxt();
        pack();
        setLocationRelativeTo(null);

    }//GEN-LAST:event_formComponentShown

    private void btnCalcular2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCalcular2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            calculaFuncao();
            validaTxt();
            pack();
            setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_btnCalcular2KeyPressed

    private void btnVoltar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVoltar1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            new OpcaoFuncao().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnVoltar1KeyPressed

    private void btnLimpar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLimpar1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtA2.setText("");
            txtB2.setText("");
            txtC2.setText("");
            lblX1Result.setText("");
            lblX2Result.setText("");
            lblYv.setText("");
            lblXv.setText("");
            lblResultado1.setText("");
            lblRaizes2.setVisible(false);
            lblX1.setVisible(false);
            lblX1Result.setVisible(false);
            lblX2.setVisible(false);
            lblX2Result.setVisible(false);
            lblYV.setVisible(false);
            lblYv.setVisible(false);
            lblXV.setVisible(false);
            lblXv.setVisible(false);
            lblResultado1.setVisible(false);
            btnLimpar1.setVisible(false);
            pack();
            setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_btnLimpar1KeyPressed

    private void txtA2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtA2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            calculaFuncao();
        }
    }//GEN-LAST:event_txtA2KeyPressed

    private void txtB2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtB2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            calculaFuncao();
        }
    }//GEN-LAST:event_txtB2KeyPressed

    private void txtC2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtC2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            calculaFuncao();
        }
    }//GEN-LAST:event_txtC2KeyPressed

    private void btGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGraficoActionPerformed
        XYSeries series = new XYSeries("Linha");        
        xDireita = xv;
        yDireita = yv;
        xEsquerda = xv;
        yEsquerda = yv;
        
        while(contadorDireita<=10){
            yDireita = a*(xDireita*xDireita)  + b*xDireita + c;	
                series.add(xDireita,yDireita);
                xDireita=xDireita+0.3;
                contadorDireita++;  
        }

        while(contadorEsquerda<=0){
            yEsquerda = a*(xEsquerda*xEsquerda)  + b*xEsquerda + c;	
        series.add(xEsquerda,yEsquerda);
                xEsquerda=xEsquerda-0.3;
                contadorEsquerda++;
        }
String titulo = "Grafico da Função " + "(" + a + "x^2" +")" + " + (" + b + "x" + ")" + " + ("+ c + ")";
	XYDataset xyDataset = new XYSeriesCollection(series);
	JFreeChart chart = ChartFactory.createXYLineChart
        (titulo, "X", "Y", xyDataset, PlotOrientation.VERTICAL, true, true, false);
	ChartFrame frame1=new ChartFrame("Gráfico de Funções",chart);
        frame1.setSize(600,600);
        Dimension tela = Toolkit.getDefaultToolkit().getScreenSize();
	frame1.setLocation((tela.width - frame1.getSize().width) / 2,
            (tela.height - frame1.getSize().height) / 2);
       	frame1.setVisible(true);
        
    }//GEN-LAST:event_btGraficoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Derivadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Derivadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Derivadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Derivadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Funcao2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGrafico;
    private javax.swing.JButton btnCalcular2;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnLimpar1;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton btnVoltar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbA2;
    private javax.swing.JLabel lbB2;
    private javax.swing.JLabel lbC2;
    private javax.swing.JLabel lblFuncao1;
    private javax.swing.JLabel lblRaizes2;
    private javax.swing.JLabel lblResultado1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblX1;
    private javax.swing.JLabel lblX1Result;
    private javax.swing.JLabel lblX2;
    private javax.swing.JLabel lblX2Result;
    private javax.swing.JLabel lblXV;
    private javax.swing.JLabel lblXv;
    private javax.swing.JLabel lblYV;
    private javax.swing.JLabel lblYv;
    private javax.swing.JTextField txtA2;
    private javax.swing.JTextField txtB2;
    private javax.swing.JTextField txtC2;
    // End of variables declaration//GEN-END:variables
}
